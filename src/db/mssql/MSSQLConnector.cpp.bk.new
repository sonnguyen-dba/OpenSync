#include "MSSQLConnector.h"
#include "../utils/Logger.h"

MSSQLConnector::MSSQLConnector(const std::string& connectionStr)
    : connStr(connectionStr), hEnv(SQL_NULL_HENV), hDbc(SQL_NULL_HDBC) {}

MSSQLConnector::MSSQLConnector(const MSSQLConnector& other)
    : connStr(other.connStr), hEnv(SQL_NULL_HENV), hDbc(SQL_NULL_HDBC) {}

MSSQLConnector::~MSSQLConnector() {
    if (hDbc) SQLDisconnect(hDbc);
    if (hDbc) SQLFreeHandle(SQL_HANDLE_DBC, hDbc);
    if (hEnv) SQLFreeHandle(SQL_HANDLE_ENV, hEnv);
}

bool MSSQLConnector::connect() {
    if (isConnected()) return true;

    SQLRETURN ret;

    ret = SQLAllocHandle(SQL_HANDLE_ENV, SQL_NULL_HANDLE, &hEnv);
    if (ret != SQL_SUCCESS && ret != SQL_SUCCESS_WITH_INFO) return false;

    ret = SQLSetEnvAttr(hEnv, SQL_ATTR_ODBC_VERSION, (void*)SQL_OV_ODBC3, 0);
    if (ret != SQL_SUCCESS && ret != SQL_SUCCESS_WITH_INFO) return false;

    ret = SQLAllocHandle(SQL_HANDLE_DBC, hEnv, &hDbc);
    if (ret != SQL_SUCCESS && ret != SQL_SUCCESS_WITH_INFO) return false;

    ret = SQLDriverConnect(hDbc, NULL,
                           (SQLCHAR*)connStr.c_str(), SQL_NTS,
                           NULL, 0, NULL, SQL_DRIVER_COMPLETE);

    if (ret != SQL_SUCCESS && ret != SQL_SUCCESS_WITH_INFO) {
        LOG_ERROR("❌ Failed to connect to MSSQL.");
        return false;
    }

    LOG_INFO("✅ Connected to MSSQL successfully!");
    return true;
}

bool MSSQLConnector::isConnected() {
    return hDbc != SQL_NULL_HDBC;
}

bool MSSQLConnector::executeQuery(const std::string& sql) {
    SQLHSTMT hStmt;
    SQLRETURN ret;

    ret = SQLAllocHandle(SQL_HANDLE_STMT, hDbc, &hStmt);
    if (ret != SQL_SUCCESS && ret != SQL_SUCCESS_WITH_INFO) return false;

    ret = SQLExecDirect(hStmt, (SQLCHAR*)sql.c_str(), SQL_NTS);
    SQLFreeHandle(SQL_HANDLE_STMT, hStmt);

    return ret == SQL_SUCCESS || ret == SQL_SUCCESS_WITH_INFO;
}

bool MSSQLConnector::executeBatchQuery(const std::vector<std::string>& sqlBatch) {
    for (const auto& sql : sqlBatch) {
        if (!executeQuery(sql)) {
            LOG_ERROR("❌ Failed to execute SQL on MSSQL: " + sql);
            return false;
        }
    }
    return true;
}

std::unique_ptr<DBConnector> MSSQLConnector::clone() const {
    return std::make_unique<MSSQLConnector>(*this);
}

